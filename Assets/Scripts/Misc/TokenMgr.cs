// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

public static class TokenMgr
{
	public static List<string> GetKeyValuePairs(string input)
	{
		List<string> pairs = new List<string>();
		
		string result = "";
		bool inQuote = false;
		// scan input until there is a space
		for (int i = 0; i < input.Length; i++)
		{
			if (input[i] == ' ')
			{
				if (inQuote == true)
					result += input[i];
				else
				{
					// reached an end
					pairs.Add(result);
					result = "";
				}
			}
			else
			{
				if ( input[i] == '"' )
					inQuote = (inQuote == true) ? false : true;
				result += input[i];
			}
		}
		
		pairs.Add(result);
		return pairs;
	}
	
	public static bool GetToken(List<string> args, string key, out string value)
	{
		value = "null";
		foreach( string arg in args )
		{
			if ( GetToken(arg,key,out value) == true )
				return true;
		}
		return false;
	}

	public static bool GetToken(string arg, string key, out string value)
	{
		List<string> args = GetKeyValuePairs(arg);
		for (int i = 0; i < args.Count; i++)
		{
			string[] keyvalue = args[i].Split('=');
			if (keyvalue.Length == 2)
			{
				if (keyvalue[0] == key)
				{
					value = keyvalue[1];
					return true;
				}
			}
		}
		value = "";
		return false;
	}
	
}

